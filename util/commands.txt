# 100:
python3 -m scripts.retrain --bottleneck_dir=tf_files/bottlenecks_100 --how_many_training_steps=1000 --model_dir=tf_files/models/ --summaries_dir=tf_files/training_summaries/mobilenet_1.0_224 --output_graph=tf_files/retrained_graph_100.pb   --output_labels=tf_files/retrained_labels.txt   --architecture="mobilenet_1.0_224"   --image_dir=tf_files/train_images --testing_percentage=10 --validation_percentage=20 --flip_left_right True

# 75:
python3 -m scripts.retrain --bottleneck_dir=tf_files/bottlenecks_75 --how_many_training_steps=2000 --model_dir=tf_files/models/ --summaries_dir=tf_files/training_summaries/mobilenet_0.75_224 --output_graph=tf_files/retrained_graph_75.pb   --output_labels=tf_files/retrained_labels.txt   --architecture="mobilenet_0.75_224"   --image_dir=tf_files/train_images --testing_percentage=10 --validation_percentage=10 --flip_left_right True

# 50:
python3 -m scripts.retrain --bottleneck_dir=tf_files/bottlenecks_50 --how_many_training_steps=1000 --model_dir=tf_files/models/ --summaries_dir=tf_files/training_summaries/mobilenet_0.50_224 --output_graph=tf_files/retrained_graph_50.pb   --output_labels=tf_files/retrained_labels.txt   --architecture="mobilenet_0.50_224"   --image_dir=tf_files/train_images --testing_percentage=10 --validation_percentage=10 --flip_left_right True

# 25:
python3 -m scripts.retrain --bottleneck_dir=tf_files/bottlenecks_25 --how_many_training_steps=1000 --model_dir=tf_files/models/ --summaries_dir=tf_files/training_summaries/mobilenet_0.25_224 --output_graph=tf_files/retrained_graph_25.pb   --output_labels=tf_files/retrained_labels.txt   --architecture="mobilenet_0.25_224"   --image_dir=tf_files/train_images --testing_percentage=10 --validation_percentage=10 --flip_left_right True

# board:
python3 plot_chart.py
tensorboard --logdir=logs

# TFLite
tflite_convert --graph_def_file=saved_models/78_classes.pb   --output_file=saved_models/optimized_graph.lite   --input_format=TENSORFLOW_GRAPHDEF   --output_format=TFLITE   --input_shape=1,224,224,3   --input_array=input_1   --output_array=dense_1/Softmax   --inference_type=FLOAT   --input_data_type=FLOAT
